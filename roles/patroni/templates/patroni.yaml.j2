## inspired from https://pgstef.github.io/2022/07/11/patroni_on_pure_raft.html

scope: {{ patroni_cluster_name }}
namespace: /db/
name: {{ ansible_hostname }}

restapi:
  listen: "0.0.0.0:8008"
  connect_address: "{{ hostvars[ansible_hostname]['ansible_default_ipv4']['address'] }}:8008"
  authentication:
    username: patroni
    password: mySupeSecretPassword

raft:
  data_dir: {{ patroni_raft_data_dir }}
  self_addr: "{{ hostvars[ansible_hostname]['ansible_default_ipv4']['address'] }}:5010"
  partner_addrs: 
{% for item in ansible_play_batch %}
   - {{ hostvars[item]['ansible_default_ipv4']['address'] }}:5010
{% endfor %}

bootstrap:
  dcs:
    ttl: 30
    loop_wait: 10
    retry_timeout: 10
    maximum_lag_on_failover: 1048576
    postgresql:
      use_pg_rewind: false
      use_slots: true
      parameters:
        archive_mode: "on"
        archive_command: "/bin/true"

  initdb:
  - encoding: UTF8
  - data-checksums
  - auth-local: peer
  - auth-host: scram-sha-256

  pg_hba:
  - host replication replicator 0.0.0.0/0 scram-sha-256
  - host all all 0.0.0.0/0 scram-sha-256

  # Some additional users which needs to be created after initializing new cluster
  users:
    admin:
      password: admin%
      options:
        - createrole
        - createdb

postgresql:
  listen: "0.0.0.0:5432"
  connect_address: "{{ hostvars[ansible_hostname]['ansible_default_ipv4']['address'] }}:5432"
  data_dir: /var/lib/pgsql/{{ postgres_version }}/data
  bin_dir: /usr/pgsql-{{ postgres_version }}/bin
  pgpass: /tmp/pgpass0
  authentication:
    replication:
      username: replicator
      password: confidential
    superuser:
      username: postgres
      password: my-super-password
    rewind:
      username: rewind_user
      password: rewind_password
  parameters:
    unix_socket_directories: '/var/run/postgresql,/tmp'

# watchdog:
#   mode: required
#   device: /dev/watchdog
#   safety_margin: 5

tags:
  nofailover: false
  noloadbalance: false
  clonefrom: false
  nosync: false
